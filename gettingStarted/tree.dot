digraph {
n0 [label="goal:"];
n1 [label="MAIN CLASS:"];
n2 [label="identifier:InvalidArrayInteger"];
n1 -> n2
n3 [label="MAIN METHOD:"];
n4 [label="identifier:a"];
n3 -> n4
n5 [label="SIMPLE PRINT LOL:"];
n6 [label="expression DOT LENGTH:"];
n7 [label="exp DOT ident LP exp COMMA exp RP:"];
n8 [label="NEW identifier LP RP:"];
n9 [label="identifier:A"];
n8 -> n9
n7 -> n8
n10 [label="identifier:a2"];
n7 -> n10
n11 [label="argument:"];
n7 -> n11
n6 -> n7
n5 -> n6
n3 -> n5
n12 [label="statements:"];
n3 -> n12
n1 -> n3
n0 -> n1
n13 [label="classDeclarations:"];
n14 [label="classDeclaration:"];
n15 [label="identifier:A"];
n14 -> n15
n16 [label="var declarations:"];
n14 -> n16
n17 [label="methodDeclarations:"];
n18 [label="methodDec:"];
n19 [label="typechar:"];
n20 [label="identifier:A"];
n19 -> n20
n18 -> n19
n21 [label="identifier:a1"];
n18 -> n21
n22 [label="parameters:"];
n23 [label="parameter:"];
n24 [label="INT:"];
n23 -> n24
n25 [label="identifier:num"];
n23 -> n25
n22 -> n23
n18 -> n22
n26 [label="methodBody:"];
n27 [label="var declaration:"];
n28 [label="INT LB RB:"];
n27 -> n28
n29 [label="identifier:num_aux"];
n27 -> n29
n26 -> n27
n30 [label="statement:"];
n31 [label="SOMETHING [ASSIGNED] = TO SOMETHING:"];
n32 [label="identifier:num_aux"];
n31 -> n32
n33 [label="FALSE:"];
n31 -> n33
n34 [label="Int:2"];
n31 -> n34
n30 -> n31
n26 -> n30
n35 [label="statement:"];
n36 [label="IF LP expression RP statement ELSE statement:"];
n37 [label="LESS_THAN:"];
n38 [label="expression LEFT_BRACKET expression RIGHT_BRACKET:"];
n39 [label="identifier:num_aux"];
n38 -> n39
n40 [label="exp DOT ident LP exp COMMA exp RP:"];
n41 [label="THIS:"];
n40 -> n41
n42 [label="identifier:a2"];
n40 -> n42
n43 [label="argument:"];
n40 -> n43
n38 -> n40
n37 -> n38
n44 [label="Int:1"];
n37 -> n44
n36 -> n37
n45 [label="SOMETHING [ASSIGNED] = TO SOMETHING:"];
n46 [label="identifier:num_aux"];
n45 -> n46
n47 [label="Int:0"];
n45 -> n47
n48 [label="Int:1"];
n45 -> n48
n36 -> n45
n49 [label="SOMETHING ASSIGNED = TO SOMETHING:"];
n50 [label="identifier:num_aux"];
n49 -> n50
n51 [label="exp DOT ident LP exp COMMA exp RP:"];
n52 [label="THIS:"];
n51 -> n52
n53 [label="identifier:a2"];
n51 -> n53
n54 [label="argument:"];
n51 -> n54
n49 -> n51
n36 -> n49
n35 -> n36
n26 -> n35
n55 [label="statement:"];
n56 [label="SOMETHING [ASSIGNED] = TO SOMETHING:"];
n57 [label="identifier:num_aux"];
n56 -> n57
n58 [label="Int:3"];
n56 -> n58
n59 [label="expression DOT LENGTH:"];
n60 [label="identifier:num"];
n59 -> n60
n56 -> n59
n55 -> n56
n26 -> n55
n18 -> n26
n61 [label="RETURN:"];
n62 [label="THIS:"];
n61 -> n62
n18 -> n61
n17 -> n18
n63 [label="methodDec:"];
n64 [label="INT LB RB:"];
n63 -> n64
n65 [label="identifier:a2"];
n63 -> n65
n66 [label="parameters:"];
n63 -> n66
n67 [label="methodBody:"];
n68 [label="var declaration:"];
n69 [label="INT:"];
n68 -> n69
n70 [label="identifier:a"];
n68 -> n70
n67 -> n68
n71 [label="statement:"];
n72 [label="SOMETHING [ASSIGNED] = TO SOMETHING:"];
n73 [label="identifier:a"];
n72 -> n73
n74 [label="Int:0"];
n72 -> n74
n75 [label="Int:2"];
n72 -> n75
n71 -> n72
n67 -> n71
n63 -> n67
n76 [label="RETURN:"];
n77 [label="identifier:a"];
n76 -> n77
n63 -> n76
n17 -> n63
n14 -> n17
n13 -> n14
n0 -> n13
}
