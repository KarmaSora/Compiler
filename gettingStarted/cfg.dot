digraph CFG {
graph [splines=ortho];
node [shape=box];
Main [label="Main\n__t0 := NEW Sum\n__t1 := CALL __t0.calcSum(100)\nPRINT __t1\nEXIT\n"];
Sum_calcSum -> whileCondition_1;
Sum_calcSum [label="Sum_calcSum\nsum := 0\ngoto whileCondition_1\n"];
whileCondition_1 -> whileBody_2 [xlabel="true"];
whileCondition_1 -> whileExit_3 [xlabel="false"];
whileCondition_1 [label="whileCondition_1\n__t2 := 1 < num\nif __t2 goto whileBody_2 else goto whileExit_3\n"];
whileBody_2 -> whileCondition_4;
whileBody_2 [label="whileBody_2\ngoto whileCondition_4\n"];
whileExit_3 [label="whileExit_3\nRETURN sum\n"];
whileCondition_4 -> whileBody_5 [xlabel="true"];
whileCondition_4 -> whileExit_6 [xlabel="false"];
whileCondition_4 [label="whileCondition_4\n__t3 := 2 < num\nif __t3 goto whileBody_5 else goto whileExit_6\n"];
whileBody_5 -> whileCondition_7;
whileBody_5 [label="whileBody_5\ngoto whileCondition_7\n"];
whileExit_6 -> whileCondition_1;
whileExit_6 [label="whileExit_6\ngoto whileCondition_1\n"];
whileCondition_7 -> whileBody_8 [xlabel="true"];
whileCondition_7 -> whileExit_9 [xlabel="false"];
whileCondition_7 [label="whileCondition_7\n__t4 := 3 < num\nif __t4 goto whileBody_8 else goto whileExit_9\n"];
whileBody_8 -> block_10 [xlabel="true"];
whileBody_8 -> block_11 [xlabel="false"];
whileBody_8 [label="whileBody_8\n__t6 := 50 < num\n__t7 := sum < 2000\n__t5 := __t6 && __t7\nif __t5 goto block_11 else goto block_10\n"];
whileExit_9 -> whileCondition_4;
whileExit_9 [label="whileExit_9\ngoto whileCondition_4\n"];
block_10 -> block_12;
block_10 [label="block_10\nPRINT sum\ngoto block_12\n"];
block_11 -> block_12;
block_11 [label="block_11\nPRINT num\ngoto block_12\n"];
block_12 -> whileCondition_7;
block_12 [label="block_12\n__t8 := sum + num\nsum := __t8\n__t9 := num - 1\nnum := __t9\ngoto whileCondition_7\n"];
Sum_calcSum1 -> whileCondition_13;
Sum_calcSum1 [label="Sum_calcSum1\nsum := 0\ngoto whileCondition_13\n"];
whileCondition_13 -> whileBody_14 [xlabel="true"];
whileCondition_13 -> whileExit_15 [xlabel="false"];
whileCondition_13 [label="whileCondition_13\n__t10 := 0 < num\nif __t10 goto whileBody_14 else goto whileExit_15\n"];
whileBody_14 -> whileCondition_16;
whileBody_14 [label="whileBody_14\ngoto whileCondition_16\n"];
whileExit_15 [label="whileExit_15\nRETURN sum\n"];
whileCondition_16 -> whileBody_17 [xlabel="true"];
whileCondition_16 -> whileExit_18 [xlabel="false"];
whileCondition_16 [label="whileCondition_16\n__t11 := 0 < num\nif __t11 goto whileBody_17 else goto whileExit_18\n"];
whileBody_17 -> whileCondition_19;
whileBody_17 [label="whileBody_17\ngoto whileCondition_19\n"];
whileExit_18 -> whileCondition_13;
whileExit_18 [label="whileExit_18\ngoto whileCondition_13\n"];
whileCondition_19 -> whileBody_20 [xlabel="true"];
whileCondition_19 -> whileExit_21 [xlabel="false"];
whileCondition_19 [label="whileCondition_19\n__t12 := 0 < num\nif __t12 goto whileBody_20 else goto whileExit_21\n"];
whileBody_20 -> whileCondition_22;
whileBody_20 [label="whileBody_20\ngoto whileCondition_22\n"];
whileExit_21 -> whileCondition_16;
whileExit_21 [label="whileExit_21\ngoto whileCondition_16\n"];
whileCondition_22 -> whileBody_23 [xlabel="true"];
whileCondition_22 -> whileExit_24 [xlabel="false"];
whileCondition_22 [label="whileCondition_22\n__t13 := 0 < num\nif __t13 goto whileBody_23 else goto whileExit_24\n"];
whileBody_23 -> whileCondition_22;
whileBody_23 [label="whileBody_23\n__t14 := sum + num\nsum := __t14\n__t15 := num - 1\nnum := __t15\ngoto whileCondition_22\n"];
whileExit_24 -> whileCondition_19;
whileExit_24 [label="whileExit_24\ngoto whileCondition_19\n"];
Sum_calcSum2 -> block_25 [xlabel="true"];
Sum_calcSum2 -> block_26 [xlabel="false"];
Sum_calcSum2 [label="Sum_calcSum2\nsum := 0\n__t17 := 50 < num\n__t18 := sum < 2000\n__t16 := __t17 && __t18\nif __t16 goto block_26 else goto block_25\n"];
block_25 -> block_28 [xlabel="true"];
block_25 -> block_29 [xlabel="false"];
block_25 [label="block_25\n__t20 := 50 < num\n__t21 := sum < 2000\n__t19 := __t20 && __t21\nif __t19 goto block_29 else goto block_28\n"];
block_26 -> block_27;
block_26 [label="block_26\nPRINT num\ngoto block_27\n"];
block_27 [label="block_27\nRETURN sum\n"];
block_28 -> block_31 [xlabel="true"];
block_28 -> block_32 [xlabel="false"];
block_28 [label="block_28\n__t23 := 50 < num\n__t24 := sum < 2000\n__t22 := __t23 && __t24\nif __t22 goto block_32 else goto block_31\n"];
block_29 -> block_30;
block_29 [label="block_29\nPRINT num\ngoto block_30\n"];
block_30 -> block_27;
block_30 [label="block_30\ngoto block_27\n"];
block_31 -> block_33;
block_31 [label="block_31\nPRINT sum\ngoto block_33\n"];
block_32 -> block_33;
block_32 [label="block_32\nPRINT num\ngoto block_33\n"];
block_33 -> block_30;
block_33 [label="block_33\ngoto block_30\n"];
}
